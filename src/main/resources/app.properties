transport.name.secondary = JDDDDDDTransport




#/*java -jar myproject.jar --spring.config.location=\
#optional:classpath:/default.properties,\
#optional:classpath:/override.properties
#way of Telling spring to get properties file for this loaction as well from cmd */


#app.name=MyApp
#app.description=${app.name} is a Spring Boot application written by ${username:Unknown}



# -----------  spring internally Logback is used By @sl4j or @log4j it implements logback of spring.
#Setting Global Logging Level: To set a base level for all loggers:
#logging.level.root=WARN
#Setting Specific Logging Level: To define a specific level for a particular package or class:
#logging.level.org.springframework.web=DEBUG
#logging.level.com.myapp.service=INFO
#Log File Output: By default, logs are printed to the console. If you want them saved to a file:
#logging.file.name=myapp.log
#Log File Rotation: For larger applications, logs can grow rapidly. To manage size, you need to configure log rotation directly in your logging framework?s configuration file. Since Spring Boot uses Logback by default, you can set up log rotation in a logback-spring.xml file placed in your src/main/resources directory:
# check further for above In https://medium.com/@AlexanderObregon/enhancing-logging-with-log-and-slf4j-in-spring-boot-applications-f7e70c6e4cc7
# ----


# -----------
# -----------
# -----------
# -----------
# -----------
# -----------